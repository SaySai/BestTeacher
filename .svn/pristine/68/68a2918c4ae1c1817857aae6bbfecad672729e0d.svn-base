package com.shanghai.haojiajiao.activity;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

import com.shanghai.haojiajiao.R;
import com.shanghai.haojiajiao.adapter.CityAdapter;
import com.shanghai.haojiajiao.adapter.CourseListAdapter;
import com.shanghai.haojiajiao.app.HaojiajiaoApplication;
import com.shanghai.haojiajiao.base.BaseActivity;
import com.shanghai.haojiajiao.model.CityModel;
import com.shanghai.haojiajiao.model.Course1Model;
import com.shanghai.haojiajiao.model.Course2Model;
import com.shanghai.haojiajiao.util.BitmapUtil;
import com.shanghai.haojiajiao.util.HttpUtil.GoodTeacherURL;
import com.shanghai.haojiajiao.util.HttpUtil.RequestTag;
import com.shanghai.haojiajiao.util.HttpUtil.ResponseOwn;
import com.shanghai.haojiajiao.util.ToastUtil;
import com.shanghai.haojiajiao.weight.CourseDialog;
import com.shanghai.haojiajiao.weight.CourseLisenner;
import com.shanghai.haojiajiao.weight.ImgSwitchDialog;
import com.shanghai.haojiajiao.weight.LoadingDialog;
import com.shanghai.haojiajiao.weight.MsgDialog;
import com.shanghai.haojiajiao.weight.MsgLisenner;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class SignUpActivity extends BaseActivity implements View.OnClickListener {
    //tab
    private LinearLayout ll_tab1, ll_parent_tab2, ll_tab_end, ll_tab_teacher2, ll_tab_teacher3;
    //tab1
    private EditText et_tab1_userEmail, et_tab1_userPassword;
    //tab2Parent
    private EditText et_parentTab2Name, et_parentTab2Sax, et_parentTab2Email, et_parentTab2Phone;
    private EditText et_ChildTab2Name, et_ChildTab2Sax, et_ChildTab2Age, et_ChildTab2Email;
    private TextView et_ChildTab2City;
    private LinearLayout ll_city_listShow;
    //城市
    private LinearLayout ll_city_list;
    private ListView lv_city;
    private CityAdapter cityAdapter;
    private TextView tv_city_gps;
    private LinearLayout ll_city_list_teacher;
    private ListView lv_city_teacher;
    private CityAdapter cityAdapter_teacher;
    private TextView tv_city_gps_teacher;
    //tab2Teacher
    private EditText et_TeacherTab2Name, et_TeacherTab2Sax, et_TeacherTab2Age, et_TeacherTab2Email, et_TeacherTab2Phone, et_TeacherTab2ZPay, et_TeacherTab2Sulf;
    private TextView et_TeacherTab2City;
    private LinearLayout ll_teacher_city;
    //tab3Teacher
    private ImageView et_TeacherTab3Add;
    private ListView et_TeacherTab3List;
    private CourseListAdapter courseListAdapter;
    //tabEnd
    private ImageView iv_userIcon;
    //other
    private ImageView iv_back;
    private TextView tv_signUp;
    private String email;
    private String password;
    private String picPath = null;
    private FinishReceiver receiver;
    private LoadingDialog loadingDialog;


    private int index = 0;//区分是家长还是老师

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign_up);
        receiver = new FinishReceiver();
        loadingDialog = new LoadingDialog(SignUpActivity.this);
        if (HaojiajiaoApplication.ISSTATE) {
            index = 0;
        } else {
            index = 1;
        }
        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction(SignUpActivity.class.getCanonicalName());
        registerReceiver(receiver, intentFilter);
        initView();
        initTab();
        initTab1();
        initTabPrarent2();
        initTabTeacher2();
        initTabTeacher3();
        initTabEnd();
        initFlow();

    }

    @Override
    public void onBackPressed() {
        backFlow(index);
    }

    @Override
    public void onClick(View v) {
        super.onClick(v);
        switch (v.getId()) {
            case R.id.iv_back:
                backFlow(index);
                break;
            case R.id.tv_signUp:
                nextFlow(index);
                break;
        }
    }

    private void initView() {
        iv_back = (ImageView) findViewById(R.id.iv_back);
        iv_back.setOnClickListener(this);
        tv_signUp = (TextView) findViewById(R.id.tv_signUp);
        tv_signUp.setOnClickListener(this);
    }

    private void initTab() {
        ll_tab1 = (LinearLayout) findViewById(R.id.ll_tab1);
        ll_parent_tab2 = (LinearLayout) findViewById(R.id.ll_parent_tab2);
        ll_tab_end = (LinearLayout) findViewById(R.id.ll_tab_end);
        ll_tab_teacher2 = (LinearLayout) findViewById(R.id.ll_tab_teacher2);
        ll_tab_teacher3 = (LinearLayout) findViewById(R.id.ll_tab_teacher3);

    }

    private void initTab1() {
        et_tab1_userEmail = (EditText) findViewById(R.id.et_tab1_userEmail);
        et_tab1_userPassword = (EditText) findViewById(R.id.et_tab1_userPassword);
    }

    private void initTabPrarent2() {
        //parent
        et_parentTab2Name = (EditText) findViewById(R.id.et_parentTab2Name);
        et_parentTab2Sax = (EditText) findViewById(R.id.et_parentTab2Sax);
        et_parentTab2Email = (EditText) findViewById(R.id.et_parentTab2Email);
        et_parentTab2Phone = (EditText) findViewById(R.id.et_parentTab2Phone);
        //child
        et_ChildTab2Name = (EditText) findViewById(R.id.et_ChildTab2Name);
        et_ChildTab2City = (TextView) findViewById(R.id.et_ChildTab2City);
        ll_city_listShow = (LinearLayout) findViewById(R.id.ll_city_listShow);
        ll_city_listShow.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (ll_city_list.getVisibility() == View.GONE) {
                    ll_city_list.setVisibility(View.VISIBLE);
                    cityAdapter.clearData();
                    ArrayList<CityModel> cityModels = new ArrayList<>();
                    for (int i = 0; i < 15; i++) {
                        CityModel cityModel = new CityModel();
                        cityModel.setCatchCity(i == 2);
                        cityModels.add(cityModel);
                    }
                    cityAdapter.setData(cityModels);
                } else {
                    ll_city_list.setVisibility(View.GONE);
                }
            }
        });
        et_ChildTab2Sax = (EditText) findViewById(R.id.et_ChildTab2Sax);
        et_ChildTab2Age = (EditText) findViewById(R.id.et_ChildTab2Age);
        et_ChildTab2Email = (EditText) findViewById(R.id.et_ChildTab2Email);
        ll_city_list = (LinearLayout) findViewById(R.id.ll_city_list);
        tv_city_gps = (TextView) findViewById(R.id.tv_city_gps);
        lv_city = (ListView) findViewById(R.id.lv_city);
        lv_city.setAdapter(cityAdapter = new CityAdapter(SignUpActivity.this));
        lv_city.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                CityModel cityModel = (CityModel) cityAdapter.getItem(position);
                et_ChildTab2City.setText("湛江");
                ll_city_list.setVisibility(View.GONE);
            }
        });
        setGpsCity(HaojiajiaoApplication.city);
    }

    private void initTabTeacher2() {
        et_TeacherTab2Name = (EditText) findViewById(R.id.et_TeacherTab2Name);
        et_TeacherTab2Sax = (EditText) findViewById(R.id.et_TeacherTab2Sax);
        et_TeacherTab2Age = (EditText) findViewById(R.id.et_TeacherTab2Age);
        et_TeacherTab2Email = (EditText) findViewById(R.id.et_TeacherTab2Email);
        et_TeacherTab2Phone = (EditText) findViewById(R.id.et_TeacherTab2Phone);
        et_TeacherTab2City = (TextView) findViewById(R.id.et_TeacherTab2City);
        et_TeacherTab2ZPay = (EditText) findViewById(R.id.et_TeacherTab2ZPay);
        et_TeacherTab2Sulf = (EditText) findViewById(R.id.et_TeacherTab2Sulf);
        ll_teacher_city = (LinearLayout) findViewById(R.id.ll_teacher_city);
        ll_teacher_city.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (ll_city_list_teacher.getVisibility() == View.GONE) {
                    ll_city_list_teacher.setVisibility(View.VISIBLE);
                    cityAdapter.clearData();
                    ArrayList<CityModel> cityModels = new ArrayList<>();
                    for (int i = 0; i < 15; i++) {
                        CityModel cityModel = new CityModel();
                        cityModel.setCatchCity(i == 2);
                        cityModels.add(cityModel);
                    }
                    cityAdapter.setData(cityModels);
                } else {
                    ll_city_list_teacher.setVisibility(View.GONE);
                }
            }
        });
        ll_city_list_teacher = (LinearLayout) findViewById(R.id.ll_city_list_teacher);
        tv_city_gps_teacher = (TextView) findViewById(R.id.tv_city_gps_teacher);
        lv_city_teacher = (ListView) findViewById(R.id.lv_city_teacher);
        lv_city_teacher.setAdapter(cityAdapter = new CityAdapter(SignUpActivity.this));
        lv_city_teacher.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                CityModel cityModel = (CityModel) cityAdapter.getItem(position);
                et_TeacherTab2City.setText("湛江");
                ll_city_list_teacher.setVisibility(View.GONE);
            }
        });
        setGpsCity(HaojiajiaoApplication.city);

    }

    private void initTabTeacher3() {
        et_TeacherTab3Add = (ImageView) findViewById(R.id.et_TeacherTab3Add);
        et_TeacherTab3Add.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                new CourseDialog(SignUpActivity.this, new CourseLisenner() {
                    @Override
                    public void sendList(Course1Model course1Model, Course2Model course2Model) {

                    }
                }).show();
            }
        });
        et_TeacherTab3List = (ListView) findViewById(R.id.et_TeacherTab3List);
        et_TeacherTab3List.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                new CourseDialog(SignUpActivity.this, new CourseLisenner() {
                    @Override
                    public void sendList(Course1Model course1Model, Course2Model course2Model) {

                    }
                }).show();
            }
        });
        et_TeacherTab3List.setAdapter(courseListAdapter = new CourseListAdapter(SignUpActivity.this));
        ArrayList<String> strings = new ArrayList<>();
        strings.add("");
        strings.add("");
        strings.add("");
        strings.add("");
        strings.add("");
        strings.add("");
        strings.add("");
        strings.add("");
        courseListAdapter.setData(strings);
    }

    private void initTabEnd() {
        iv_userIcon = (ImageView) findViewById(R.id.iv_userIcon);
        iv_userIcon.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                new ImgSwitchDialog(SignUpActivity.this, new ImgSwitchDialog.ImgSwitchLisenner() {
                    @Override
                    public void album() {
                        BitmapUtil.doPickPhotoFromGallery(SignUpActivity.this);
                    }

                    @Override
                    public void cam() {
                        BitmapUtil.doTakePhoto(SignUpActivity.this);
                    }
                }).show();
            }
        });
    }

    private void initFlow() {
        index = getIntent().getIntExtra("index", 0);
        email = getIntent().getStringExtra("email");
        password = getIntent().getStringExtra("password");
        if (email != null) {
            et_tab1_userEmail.setText(email);
        }
        if (password != null) {
            et_tab1_userPassword.setText(password);
        }
    }

    public void checkRegister(String email) {
        Map<String, String> dataParas = new HashMap<>();
        dataParas.put("userName", email);
        requestHandler.sendHttpRequestWithParam(GoodTeacherURL.checkRegister, dataParas, RequestTag.checkRegister);
    }

    public void parentRegister(String email) {
        Map<String, String> dataParas = new HashMap<>();
        dataParas.put("userName", email);
        requestHandler.sendHttpRequestWithParam(GoodTeacherURL.parentRegister, dataParas, RequestTag.parentRegister);
    }

    private void teacherRegister() {

        if (et_tab1_userEmail.getText().toString() != null && et_tab1_userEmail.getText().toString().length() > 4) {
            Map<String, String> dataParas = new HashMap<>();
            ifStrTrue(dataParas, "TeacherUserName", et_tab1_userEmail);
            ifStrTrue(dataParas, "TeacherEmail", et_TeacherTab2Email);
            ifStrTrue(dataParas, "TeacherGender", et_TeacherTab2Sax);
            ifStrTrue(dataParas, "TeacherPassword", et_tab1_userPassword);
            ifStrTrue(dataParas, "TeacherTel", et_TeacherTab2Phone);
            ifStrTrue(dataParas, "TeacherAge", et_TeacherTab2Age);
            if (et_TeacherTab2City.getText().toString() != null && et_TeacherTab2City.getText().toString().length() > 0) {
                dataParas.put("TeacherCity", et_TeacherTab2City.getText().toString());
            }
            ifStrTrue(dataParas, "TeacherPaypalAccount", et_TeacherTab2ZPay);
            ifStrTrue(dataParas, "TeacherSelfCv", et_TeacherTab2Sulf);
            ifStrTrue(dataParas, "TeacherName", et_TeacherTab2Name);
            requestHandler.sendHttpRequestWithParam(GoodTeacherURL.teacherRegister, dataParas, RequestTag.teacherRegister);
        }

    }

    private void parentRegister() {
        if (et_tab1_userEmail.getText().toString() != null && et_tab1_userEmail.getText().toString().length() > 4) {
            Map<String, String> dataParas = new HashMap<>();
            ifStrTrue(dataParas, "ParentUserName", et_tab1_userEmail);
            ifStrTrue(dataParas, "ParentPassword", et_tab1_userPassword);
            ifStrTrue(dataParas, "ParentName", et_parentTab2Name);
            ifStrTrue(dataParas, "ParentGender", et_parentTab2Sax);
            ifStrTrue(dataParas, "ParentEmail", et_parentTab2Email);
            ifStrTrue(dataParas, "ParentTel", et_parentTab2Phone);
            ifStrTrue(dataParas, "StudentName", et_ChildTab2Name);
            if (et_ChildTab2City.getText().toString() != null && et_ChildTab2City.getText().toString().length() > 0) {
                dataParas.put("StudentName", et_ChildTab2City.getText().toString());
            }
            ifStrTrue(dataParas, "StudentAge", et_ChildTab2Age);
            ifStrTrue(dataParas, "StudentGender", et_ChildTab2Sax);
            ifStrTrue(dataParas, "StudentEmail", et_ChildTab2Email);
            requestHandler.sendHttpRequestWithParam(GoodTeacherURL.parentRegister, dataParas, RequestTag.parentRegister);
        }
    }

    private void ifStrTrue(Map<String, String> dataParas, String type, EditText string) {
        String str = string.getText().toString();
        if (str != null && str.length() > 0) {
            dataParas.put(type, str);
        }
    }

    private void nextFlow(int index) {
        if (index == 0) {
            if (ll_tab1.getVisibility() == View.VISIBLE) {
                if (et_tab1_userEmail.getText() != null && et_tab1_userEmail.getText().length() > 0) {
                    checkRegister(et_tab1_userEmail.getText().toString());
                }


            } else if (ll_parent_tab2.getVisibility() == View.VISIBLE) {
                ll_parent_tab2.setVisibility(View.GONE);
                ll_tab_end.setVisibility(View.VISIBLE);
                tv_signUp.setText("submit");
            } else if (ll_tab_end.getVisibility() == View.VISIBLE) {

                parentRegister();


            }
        } else {
            if (ll_tab1.getVisibility() == View.VISIBLE) {
                if (et_tab1_userEmail.getText() != null && et_tab1_userEmail.getText().length() > 0) {
                    checkRegister(et_tab1_userEmail.getText().toString());
                }
            } else if (ll_tab_teacher2.getVisibility() == View.VISIBLE) {
                ll_tab_teacher2.setVisibility(View.GONE);
                ll_tab_teacher3.setVisibility(View.VISIBLE);
            } else if (ll_tab_teacher3.getVisibility() == View.VISIBLE) {
                ll_tab_teacher3.setVisibility(View.GONE);
                ll_tab_end.setVisibility(View.VISIBLE);
                tv_signUp.setText("submit");
            } else if (ll_tab_end.getVisibility() == View.VISIBLE) {
                teacherRegister();


            }
        }
    }

    private void backFlow(int index) {
        if (index == 0) {
            if (ll_tab1.getVisibility() == View.VISIBLE) {
                finish();
            } else if (ll_parent_tab2.getVisibility() == View.VISIBLE) {
                ll_parent_tab2.setVisibility(View.GONE);
                ll_tab1.setVisibility(View.VISIBLE);
            } else if (ll_tab_end.getVisibility() == View.VISIBLE) {
                ll_tab_end.setVisibility(View.GONE);
                ll_parent_tab2.setVisibility(View.VISIBLE);
                tv_signUp.setText("Save, next step");
            }
        } else {
            if (ll_tab1.getVisibility() == View.VISIBLE) {
                finish();
            } else if (ll_tab_teacher2.getVisibility() == View.VISIBLE) {
                ll_tab_teacher2.setVisibility(View.GONE);
                ll_tab1.setVisibility(View.VISIBLE);
            } else if (ll_tab_teacher3.getVisibility() == View.VISIBLE) {
                ll_tab_teacher3.setVisibility(View.GONE);
                ll_tab_teacher2.setVisibility(View.VISIBLE);
            } else if (ll_tab_end.getVisibility() == View.VISIBLE) {
                ll_tab_end.setVisibility(View.GONE);
                ll_tab_teacher3.setVisibility(View.VISIBLE);
                tv_signUp.setText("Save, next step");
            }
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (resultCode != RESULT_OK)
            return;
        switch (requestCode) {
            case BitmapUtil.UPLOAD_IMAGE:

                // BitmapUtil.doCropPhoto(data,SignUpActivity.this);
                Uri url = null;
                if (data != null) {
                    Bitmap bitmap = data.getParcelableExtra("data");
                    if (bitmap == null) {
                        iv_userIcon.setImageBitmap(BitmapUtil.decodeUriAsBitmap(SignUpActivity.this, data.getData()));
                        picPath = data.getData().toString();
                    } else {
                        iv_userIcon.setImageBitmap(bitmap);
                        try {
                            url = Uri.parse(BitmapUtil.saveBitmapToFile(bitmap));
                            picPath = url.toString();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                }
                break;
            case BitmapUtil.CAMERA_WITH_DATA:
                BitmapUtil.doCropPhoto(data, SignUpActivity.this);
                break;
        }
    }

    public class FinishReceiver extends BroadcastReceiver {
        @Override
        public void onReceive(Context context, Intent intent) {
            if (SignUpActivity.class.getCanonicalName().equals(intent.getAction())) {
                finish();
            }
        }
    }

    @Override
    protected void onDestroy() {
        unregisterReceiver(receiver);
        super.onDestroy();
    }

    public void setGpsCity(String city) {
        if (tv_city_gps != null || tv_city_gps_teacher != null) {
            if (city != null) {
                if (tv_city_gps != null) {
                    tv_city_gps.setText("当前定位城市：" + city);
                }
                if (tv_city_gps_teacher != null) {
                    tv_city_gps_teacher.setText("当前定位城市：" + city);
                }
            } else {
                tv_city_gps.setText("定位信息无法获取");
            }

        }
    }

    @Override
    public void onRequestError(ResponseOwn response) {
        loadingDialog.dismiss();
        super.onRequestError(response);
    }

    @Override
    public void onRequestSuccess(ResponseOwn response) {
        loadingDialog.dismiss();
        if (response.requestTag.toString().equals("checkRegister")) {//检查邮件是否可用
            String dataStr = response.responseString;
            try {
                JSONObject total1 = new JSONObject(dataStr);
                String responsestatus = total1.optString("result");
                if (responsestatus.equals("1")) {
                    new MsgDialog(SignUpActivity.this, et_tab1_userEmail.getText().toString(), true, "Please confirm that your login account is:", new MsgLisenner() {
                        @Override
                        public void goback() {
                            if (index == 0) {
                                ll_tab1.setVisibility(View.GONE);
                                ll_parent_tab2.setVisibility(View.VISIBLE);
                            } else {
                                ll_tab1.setVisibility(View.GONE);
                                ll_tab_teacher2.setVisibility(View.VISIBLE);
                            }
                        }
                    }).show();
                } else {
                    new MsgDialog(SignUpActivity.this, "Account already exists", true, "Sorry！", new MsgLisenner() {
                        @Override
                        public void goback() {
                        }
                    }).show();
                }
            } catch (Exception e) {
                e.printStackTrace();


            }

        } else if (response.requestTag.toString().equals("teacherRegister")) {
            String dataStr = response.responseString;
            JSONObject total1 = null;
            try {
                total1 = new JSONObject(dataStr);
                String responsestatus = total1.optString("result");
                if (responsestatus.equals("1")) {
                    HaojiajiaoApplication.IFLOGIN = true;
                    ToastUtil.showLong(SignUpActivity.this, "Congratulations Registration success");
                    Intent intent = new Intent(SignUpActivity.this, MainActivity.class);
                    startActivity(intent);
                    finish();
                } else {
                    ToastUtil.showLong(SignUpActivity.this, "I'm sorry Registration failure");
                }

            } catch (JSONException e) {
                e.printStackTrace();
            }

        } else if (response.requestTag.toString().equals("parentRegister")) {
            String dataStr = response.responseString;
            JSONObject total1 = null;
            try {
                total1 = new JSONObject(dataStr);
                String responsestatus = total1.optString("result");
                if (responsestatus.equals("1")) {
                    HaojiajiaoApplication.IFLOGIN = true;
                    ToastUtil.showLong(SignUpActivity.this, "恭喜您！注册成功");
                    HaojiajiaoApplication.userName = et_tab1_userEmail.getText().toString();
                    Intent intent = new Intent(SignUpActivity.this, MainActivity.class);
                    startActivity(intent);
                    finish();
                } else {
                    ToastUtil.showLong(SignUpActivity.this, "抱歉！注册失败");
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }
}
