package com.shanghai.haojiajiao.activity;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.view.KeyEvent;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.shanghai.haojiajiao.R;
import com.shanghai.haojiajiao.adapter.MyFragmentPagerAdapter;
import com.shanghai.haojiajiao.app.HaojiajiaoApplication;
import com.shanghai.haojiajiao.base.BaseActivity;
import com.shanghai.haojiajiao.fragment.about.MyMainFM;
import com.shanghai.haojiajiao.fragment.homepage.HomePageMainFM;
import com.shanghai.haojiajiao.fragment.message.MessageMainFM;
import com.shanghai.haojiajiao.model.BroadCastAction;
import com.shanghai.haojiajiao.util.BitmapUtil;
import com.shanghai.haojiajiao.util.ExampleUtil;
import com.shanghai.haojiajiao.weight.CustomDialog;
import com.shanghai.haojiajiao.weight.LoginDialog;
import com.shanghai.haojiajiao.weight.LoginLisenner;

import java.io.IOException;
import java.util.ArrayList;

import cn.jpush.android.api.JPushInterface;

public class MainActivity extends BaseActivity implements View.OnClickListener {
    private LinearLayout homepage_ll, message_ll, my_ll;
    public final static int HOME_PAGETAG = 0;
    public final static int MESSAGETAG = 1;
    public final static int MYTAG = 2;
    private HomePageMainFM homePageMainFM;//作业
    private MessageMainFM messageMainFM;//个人中心
    private MyMainFM myMainFM;//关于我们
    private android.support.v4.app.FragmentManager fragmentManager;
    private CustomDialog mDialog = null;
    private TextView status_bar_tv, dialogContent;
    private LinearLayout dialogOK, dialogCancel;
    private ImageView main_page_iv, category_iv, my_package_iv;
    private String picPath = null;
    //for receive customer msg from jpush server
    public static final String MESSAGE_RECEIVED_ACTION = "com.example.jpushdemo.MESSAGE_RECEIVED_ACTION";
    public static final String KEY_TITLE = "title";
    public static final String KEY_MESSAGE = "message";
    public static final String KEY_EXTRAS = "extras";
    public static boolean isForeground = false;
    private MessageReceiver mMessageReceiver;
    public static int IF_MSG_IS_INIT_FIRST = 0;
    public ViewPager viewPager = null;

    //    private TextView textView1,textView2,textView3;
//    private int color_pressed,color_no_pressed;
    @Override
    public void onCreate(Bundle savedInstanceState) {
        // TODO 自动生成的方法存根
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        JPushInterface.init(getApplicationContext());
        fragmentManager = getSupportFragmentManager();
        initColor();
        initView();
        registerMessageReceiver();
        initViewpager();

    }

    private void initViewpager() {
        viewPager = (ViewPager) findViewById(R.id.content_view);
        if (HaojiajiaoApplication.IFLOGIN) {
            viewPager.setOffscreenPageLimit(2);
        } else {
            viewPager.setOffscreenPageLimit(1);
        }
        ArrayList<Fragment> fragmentList = new ArrayList<Fragment>();
        fragmentList.add(homePageMainFM = new HomePageMainFM());
        fragmentList.add(messageMainFM = new MessageMainFM());
        if (HaojiajiaoApplication.IFLOGIN) {
            fragmentList.add(myMainFM = new MyMainFM());
        }
        viewPager.setAdapter(new MyFragmentPagerAdapter(getSupportFragmentManager(), fragmentList));
        viewPager.setCurrentItem(HaojiajiaoApplication.screenBack);
        screenChange(HaojiajiaoApplication.screenBack);
        viewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

            }

            @Override
            public void onPageSelected(int position) {
                screenChange(HaojiajiaoApplication.screenBack = position);
            }

            @Override
            public void onPageScrollStateChanged(int state) {

            }
        });

    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        unregisterReceiver(mMessageReceiver);
    }

    @Override
    protected void onStart() {
        super.onStart();
    }

    //初始化控件
    private void initView() {
        homepage_ll = (LinearLayout) findViewById(R.id.homepage_ll);
        message_ll = (LinearLayout) findViewById(R.id.message_ll);
        my_ll = (LinearLayout) findViewById(R.id.my_ll);
        homepage_ll.setOnClickListener(this);
        message_ll.setOnClickListener(this);
        my_ll.setOnClickListener(this);
        status_bar_tv = (TextView) findViewById(R.id.status_bar_tv);
        main_page_iv = (ImageView) findViewById(R.id.main_page_iv);
        category_iv = (ImageView) findViewById(R.id.category_iv);
        my_package_iv = (ImageView) findViewById(R.id.my_package_iv);
//        textView1=(TextView)findViewById(R.id.textView1);
//        textView2=(TextView)findViewById(R.id.textView2);
//        textView3=(TextView)findViewById(R.id.textView3);
        //每个继承的activity都要写该方法,第一个参数为需要设置的view,
        // 第二个参数为要设置的view的颜色,颜色从color.xm两种取,不设置颜色则设置为-1
        setStatusBar(status_bar_tv, R.color.theme_color);
    }

    private void showDialog() {
        if (mDialog == null) {
            mDialog = new CustomDialog(this, R.style.MyDialog,
                    R.layout.layout_dialog);
            mDialog.show();
            dialogContent = (TextView) mDialog
                    .findViewById(R.id.dialog_content_tv);
            dialogContent.setText("您确定要退出吗？");
            dialogOK = (LinearLayout) mDialog
                    .findViewById(R.id.ok_btn_layout);
            dialogCancel = (LinearLayout) mDialog
                    .findViewById(R.id.cancle_btn_layout);
            dialogOK.setOnClickListener(this);
            dialogCancel.setOnClickListener(this);
        } else {
            mDialog.show();
        }
    }

    // 初始化颜色值
    private void initColor() {
//        color_pressed = Color.parseColor("#4CB6D8");
//        color_no_pressed = Color.parseColor("#8A8C98");
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.homepage_ll:// 首页
                if (HOME_PAGETAG == viewPager.getCurrentItem()) {
                } else {
                    screenChange(HOME_PAGETAG);
                    viewPager.setCurrentItem(HOME_PAGETAG);
                }
                break;

            case R.id.message_ll:// 消息
                if (MESSAGETAG == viewPager.getCurrentItem()) {
                } else {
                    screenChange(MESSAGETAG);
                    viewPager.setCurrentItem(MESSAGETAG);
                }
                break;

            case R.id.my_ll://我的
                if (HaojiajiaoApplication.IFLOGIN) {
                    if (MYTAG == viewPager.getCurrentItem()) {
                    } else {
                        screenChange(MYTAG);
                        viewPager.setCurrentItem(MYTAG);
                    }
                } else {
                    new LoginDialog(this, "请登陆才可以进入我的界面！", new LoginLisenner() {
                        @Override
                        public void login() {
                            Intent intenta = new Intent(MainActivity.this, WelcomeActivity.class);
                            startActivity(intenta);
                            Intent intent = new Intent(BroadCastAction.MAINACTIVITY);
                            sendBroadcast(intent);
                        }

                        @Override
                        public void sign() {
                            Intent intenta = new Intent(MainActivity.this, WelcomeActivity.class);
                            startActivity(intenta);
                            Intent intent = new Intent(BroadCastAction.MAINACTIVITY);
                            sendBroadcast(intent);
                        }
                    }).show();

                }

                break;
            case R.id.ok_btn_layout:
                finish();
//                JPushInterface.stopPush(getApplicationContext());
                Intent intent = new Intent(Intent.ACTION_MAIN);
                intent.addCategory(Intent.CATEGORY_HOME);
                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                startActivity(intent);
                android.os.Process.killProcess(android.os.Process.myPid());
                break;
            case R.id.cancle_btn_layout:
                mDialog.dismiss();
                break;
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (resultCode == RESULT_OK) {
            if (myMainFM != null) {
                switch (requestCode) {
                    case 196610:
                        if (data != null) {
                            //取得返回的Uri,基本上选择照片的时候返回的是以Uri形式，但是在拍照中有得机子呢Uri是空的，所以要特别注意
                            Uri mImageCaptureUri = data.getData();
                            //返回的Uri不为空时，那么图片信息数据都会在Uri中获得。如果为空，那么我们就进行下面的方式获取
                            if (mImageCaptureUri != null) {
                                Bitmap image;
                                try {
                                    //这个方法是根据Uri获取Bitmap图片的静态方法
                                    image = MediaStore.Images.Media.getBitmap(this.getContentResolver(), mImageCaptureUri);
                                    if (image != null) {
//                                        photo.setImageBitmap(image);
                                        myMainFM.getRequestCodeFromActivity(image);
                                    }
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }
                            } else {
                                Bundle extras = data.getExtras();
                                if (extras != null) {
                                    //这里是有些拍照后的图片是直接存放到Bundle中的所以我们可以从这里面获取Bitmap图片
                                    Bitmap image = extras.getParcelable("data");
                                    if (image != null) {
                                       myMainFM.getRequestCodeFromActivity(image);
                                    }
                                }
                            }

                        }
                        break;
//                        ;
                    case 196609:
//                      if (data != null) {
                        //取得返回的Uri,基本上选择照片的时候返回的是以Uri形式，但是在拍照中有得机子呢Uri是空的，所以要特别注意
                        Uri mImageCaptureUri = data.getData();
                        //返回的Uri不为空时，那么图片信息数据都会在Uri中获得。如果为空，那么我们就进行下面的方式获取
                        if (mImageCaptureUri != null) {
                            Bitmap image;
                            try {
                                //这个方法是根据Uri获取Bitmap图片的静态方法
                                image = MediaStore.Images.Media.getBitmap(this.getContentResolver(), mImageCaptureUri);
                                if (image != null) {
                                    myMainFM.getRequestCodeFromActivity(image);
                                }
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        } else {
                            Bundle extras = data.getExtras();
                            if (extras != null) {
                                //这里是有些拍照后的图片是直接存放到Bundle中的所以我们可以从这里面获取Bitmap图片
                                Bitmap image = extras.getParcelable("data");
                                if (image != null) {
                                    myMainFM.getRequestCodeFromActivity(image);
                                }
                            }
                        }
                        break;
                }

            }
        }
        super.onActivityResult(requestCode, resultCode, data);

    }

    // 管理主界面屏幕切换。
    public void screenChange(int num) {
        switch (num) {
            case HOME_PAGETAG://首页
                setColor(1);

                HaojiajiaoApplication.screenBack = HOME_PAGETAG;
                break;
            case MESSAGETAG://消息
                setColor(2);
                HaojiajiaoApplication.screenBack = MYTAG;
                break;
            case MYTAG:// 我的
                setColor(3);
                HaojiajiaoApplication.screenBack = MYTAG;
                break;
        }
    }

    //设置颜色
    private void setColor(int position) {
        switch (position) {
            case 1:
                homepage_ll.setBackgroundColor(getResources().getColor(R.color.tab_press_color));
                message_ll.setBackgroundColor(getResources().getColor(R.color.tab_no_press_color));
                my_ll.setBackgroundColor(getResources().getColor(R.color.tab_no_press_color));
//                main_page_iv.setBackgroundResource(R.mipmap.tab12);
//                category_iv.setBackgroundResource(R.mipmap.tab21);
//                my_package_iv.setBackgroundResource(R.mipmap.tab31);
//                textView1.setTextColor(color_pressed);
//                textView2.setTextColor(color_no_pressed);
//                textView3.setTextColor(color_no_pressed);
                break;
            case 2:
                homepage_ll.setBackgroundColor(getResources().getColor(R.color.tab_no_press_color));
                message_ll.setBackgroundColor(getResources().getColor(R.color.tab_press_color));
                my_ll.setBackgroundColor(getResources().getColor(R.color.tab_no_press_color));
//                main_page_iv.setBackgroundResource(R.mipmap.tab11);
//                category_iv.setBackgroundResource(R.mipmap.tab22);
//                my_package_iv.setBackgroundResource(R.mipmap.tab31);
//                textView1.setTextColor(color_no_pressed);
//                textView2.setTextColor(color_pressed);
//                textView3.setTextColor(color_no_pressed);
                break;
            case 3:
                homepage_ll.setBackgroundColor(getResources().getColor(R.color.tab_no_press_color));
                message_ll.setBackgroundColor(getResources().getColor(R.color.tab_no_press_color));
                my_ll.setBackgroundColor(getResources().getColor(R.color.tab_press_color));
//                main_page_iv.setBackgroundResource(R.mipmap.tab11);
//                category_iv.setBackgroundResource(R.mipmap.tab21);
//                my_package_iv.setBackgroundResource(R.mipmap.tab32);
//                textView1.setTextColor(color_no_pressed);
//                textView2.setTextColor(color_no_pressed);
//                textView3.setTextColor(color_pressed);
                break;
        }

    }


    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        switch (keyCode) {
            case KeyEvent.KEYCODE_BACK:
                showDialog();
                break;
        }
        return super.onKeyDown(keyCode, event);
    }


    public class MessageReceiver extends BroadcastReceiver {

        @Override
        public void onReceive(Context context, Intent intent) {
            if (MESSAGE_RECEIVED_ACTION.equals(intent.getAction())) {
                String messge = intent.getStringExtra(KEY_MESSAGE);
                String extras = intent.getStringExtra(KEY_EXTRAS);
                StringBuilder showMsg = new StringBuilder();
                showMsg.append(KEY_MESSAGE + " : " + messge + "\n");
                if (!ExampleUtil.isEmpty(extras)) {
                    showMsg.append(KEY_EXTRAS + " : " + extras + "\n");
                }
                setCostomMsg(showMsg.toString());
            } else if (BroadCastAction.MAINACTIVITY.equals(intent.getAction())) {
                finish();
            }

        }
    }

    public void registerMessageReceiver() {
        mMessageReceiver = new MessageReceiver();
        IntentFilter filter = new IntentFilter();
        filter.setPriority(IntentFilter.SYSTEM_HIGH_PRIORITY);
        filter.addAction(MESSAGE_RECEIVED_ACTION);
        filter.addAction(BroadCastAction.MAINACTIVITY);
        registerReceiver(mMessageReceiver, filter);
    }

    private void setCostomMsg(String msg) {
//        if (null != msgText) {
//            msgText.setText(msg);
//            msgText.setVisibility(android.view.View.VISIBLE);
//        }
    }

}
